@model LoginViewModel
@inject SignInManager<AppUser> SignInManager
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["登陆"];
}
<div class="ui grid container">
    <div class="row">
        <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="ui form">
            <h2>@Localizer["登陆"]，@System.Globalization.CultureInfo.CurrentCulture.Name</h2>
            <div asp-validation-summary="All" class="ui message" />
            <div class="field">
                <label asp-for="Email"></label>
                <div class="col-md-10">
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>
            <div class="field">
                <label asp-for="Password"></label>
                <div class="col-md-10">
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>
            <div class="field">
                <div class="ui checkbox">
                    <input asp-for="RememberMe" />
                    <label asp-for="RememberMe">
                        @Html.DisplayNameFor(m => m.RememberMe)
                    </label>
                </div>
            </div>
            <div class="field">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="positive ui button">Log in</button>
                </div>
            </div>
            <p>
                <div class="mini ui buttons">
                    <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]" class="ui button">Register as a new user?</a>
                    <div class="or" data-text="or"></div>
                    <a asp-action="ForgotPassword" class="ui button">Forgot your password?</a>
                </div>
            </p>
        </form>
                    <p>
                        <h4>Use another service to log in.</h4>
                        <hr />
                        @{
                            var loginProviders = SignInManager.GetExternalAuthenticationSchemesAsync().Result.ToList();
                            if (loginProviders.Count > 0)
                            {
                                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">

                                    @foreach (var provider in loginProviders)
                                    {
                                        var classMapping = provider.DisplayName.ToLower();
                                        var iconMapping = classMapping;
                                        if (classMapping.Equals("microsoft"))
                                        {
                                            classMapping = "windows";
                                            iconMapping = classMapping;
                                        }
                                        else if (classMapping.Equals("google"))
                                        {
                                            classMapping += " plus";
                                            iconMapping = "google";
                                        }

                                        <button type="submit" class="mini ui circular @classMapping icon button" name="provider" value="@provider.DisplayName">
                                            <i class="@iconMapping icon"></i>
                                        </button>
                                    }
                                </form>
                            }
                        }
                    </p>
            

          
               
    </div>
</div>
    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }